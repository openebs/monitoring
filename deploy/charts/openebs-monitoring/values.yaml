# Default values for openebs-monitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Provide a name in place of openebs-monitoring for `app:` labels
##
nameOverride: ""

## Override the deployment namespace
##
namespaceOverride: ""

## Provide a name to substitute for the full names of resources
##
fullnameOverride: ""

## Configuration for installing openebs-monitoring dashboards in already installed prometheus stack
openebsMonitoringAddon:
  enabled: false

  grafana:
    ## Deploy custom openebs dashboards
    openebsDashboardsEnabled: true

    ## Sidecar container to load dashboard cm
    sidecar:
      dashboards:
        enabled: true
        # ConfigMaps with label below will be added to Grafana as dashboards.
        label: grafana_dashboard

## Configuration for kube-prometheus-stack subchart
kube-prometheus-stack:
  install: true
  prometheus:
    service:
      type: NodePort
      nodePort: 32514

    prometheusSpec:
      ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
      ## prometheus resource to be created with selectors based on values in the helm deployment,
      ## which will also match the servicemonitors created
      ##
      serviceMonitorSelectorNilUsesHelmValues: false

      ## If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the
      ## prometheus resource to be created with selectors based on values in the helm deployment,
      ## which will also match the podmonitors created
      ##
      podMonitorSelectorNilUsesHelmValues: false

      ## Number of replicas of each shard to deploy for a Prometheus deployment.
      ## Number of replicas multiplied by shards is the total number of Pods created.
      ##
      replicas: 1

      ## Prometheus StorageSpec for persistent data
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md
      ##
      storageSpec:
        {}
        # volumeClaimTemplate:
        #   metadata:
        #     name: prom
        #   spec:
        #     storageClassName: cstorsc-ooqun
        #     accessModes: ["ReadWriteOnce"]
        #     resources:
        #       requests:
        #         storage: 10Gi
        #   selector: {}

  alertmanager:
    ## Deploy alertmanager
    ##
    enabled: true

    config:

    service:
      type: NodePort
      nodePort: 30903

    alertmanagerSpec:
      ## Size is the expected size of the alertmanager cluster. The controller will eventually make the size of the
      ## running cluster equal to the expected size.
      replicas: 1

      ## Storage is the definition of how storage will be used by the Alertmanager instances.
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md
      ##
      storage:
        {}
        # volumeClaimTemplate:
        #   metadata:
        #     name: alert
        #   spec:
        #     storageClassName: cstorsc-ooqun
        #     accessModes: ["ReadWriteOnce"]
        #     resources:
        #       requests:
        #         storage: 10Gi
        #   selector: {}

  prometheusOperator:
    enabled: true

    ## Prometheus-Operator v0.39.0 and later support TLS natively.
    ##
    # tls:
    #   enabled: false

  grafana:
    enabled: true

    ## In order to render HTML and Javascript in a text panel without being sanitized
    ## enable the `disable_sanitize_html` settings in Grafana ini file
    grafana.ini:
      panels:
        disable_sanitize_html: true

    service:
      type: NodePort
      nodePort: 32515

    ## Deploy default dashboards.
    ##
    defaultDashboardsEnabled: true
    openebsDashboardsEnabled: true
    adminPassword: admin

    sidecar:
      dashboards:
        enabled: true
        # ConfigMaps with label below will be added to Grafana as dashboards.
        label: grafana_dashboard

    ## Pass the plugins you want installed as a list.
    ##
    plugins:
      - grafana-polystat-panel
      - snuids-trafficlights-panel

customDashboards:
  cStor:
    enabled: true
  Jiva:
prometheusRules:
  pool:
    enabled: true
  volume:
    enabled: true

serviceMonitors:
  cstor:
    enabled: true

    ## Endpoints of the selected service to be monitored
    endpoints:
      ## Name of the endpoint's service port
      ## Mutually exclusive with targetPort
      #  port: ""
      port: exporter

      ## HTTP path to scrape for metrics
      #  path: /metrics
      path: /metrics

      ## relabel configs to apply to samples before ingestion.
      ##
      # relabelings: []
      #   - sourceLabels: [__meta_kubernetes_service_name]
      #     separator: ;
      #     regex: (.*)
      #     targetLabel: service
      #     replacement: $1
      #     action: replace
      relabelings:
        ## RelabelConfigs to apply to samples before scraping.
        ## More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
        ## To know more about RelabelConfig schema visit: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
        - sourceLabels: [__meta_kubernetes_pod_label_monitoring]
          regex: volume_exporter_prometheus
          action: keep
        ## Below entry ending with vsm is deprecated and is maintained for
        ## backward compatibility purpose.
        - sourceLabels: [__meta_kubernetes_pod_label_vsm]
          action: replace
          targetLabel: openebs_pv
        ## Below entry is the correct entry. Though the above and below entries
        ## are having same target_label as openebs_pv, only one of them will be
        ## valid for any release.
        - sourceLabels:
            [__meta_kubernetes_pod_label_openebs_io_persistent_volume]
          action: replace
          targetLabel: openebs_pv
        - sourceLabels:
            [__meta_kubernetes_pod_label_openebs_io_persistent_volume_claim]
          action: replace
          targetLabel: openebs_pvc
        - sourceLabels: [__meta_kubernetes_pod_label_app]
          action: replace
          targetLabel: openebs_cstor_label

    ## Label selector for services to which this ServiceMonitor applies
    # selector: {}
    #   matchLabels: {}

    ## Example

    # selector:
    #   matchLabels:
    #     cas-type: cstor

    selector:
      matchLabels:
        openebs.io/cas-type: cstor

    ## Namespaces from which services are selected
    # namespaceSelector: []
    ## Match any namespace
    #   any: true

    ## Example

    # namespaceSelector:
    #   any: true

    ## Explicit list of namespace names to select
    # matchNames: []

    ## Example

    # namespaceSelector:
    #   matchNames:
    #   - openebs
    #   - default

    namespaceSelector:
      any: true

  jiva:
    enabled: true

    ## Endpoints of the selected service to be monitored
    endpoints:
      ## Name of the endpoint's service port
      ## Mutually exclusive with targetPort
      #  port: ""
      port: exporter

      ## HTTP path to scrape for metrics
      #  path: /metrics
      path: /metrics

      ## relabel configs to apply to samples before ingestion.
      ##
      #  relabelings: []
      #    - sourceLabels: [__meta_kubernetes_service_name]
      #      separator: ;
      #      regex: (.*)
      #      targetLabel: service
      #      replacement: $1
      #      action: replace
      relabelings:
        ## RelabelConfigs to apply to samples before scraping.
        ## More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
        ## To know more about RelabelConfig schema visit: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
        - sourceLabels: [__meta_kubernetes_pod_label_monitoring]
          regex: volume_exporter_prometheus
          action: keep
        ## Below entry ending with vsm is deprecated and is maintained for
        ## backward compatibility purpose.
        - sourceLabels: [__meta_kubernetes_pod_label_vsm]
          action: replace
          targetLabel: openebs_pv
        ## Below entry is the correct entry. Though the above and below entries
        ## are having same target_label as openebs_pv, only one of them will be
        ## valid for any release.
        - sourceLabels:
            [__meta_kubernetes_pod_label_openebs_io_persistent_volume]
          action: replace
          targetLabel: openebs_pv
        - sourceLabels:
            [__meta_kubernetes_pod_label_openebs_io_persistent_volume_claim]
          action: replace
          targetLabel: openebs_pvc
        - sourceLabels: [__meta_kubernetes_pod_label_openebs_io_controller]
          action: replace
          targetLabel: openebs_jiva_label

    ## Label selector for services to which this ServiceMonitor applies
    # selector: {}
    #   matchLabels: {}

    ## Example

    # selector:
    #   matchLabels:
    #     cas-type: jiva

    selector:
      matchLabels:
        openebs.io/cas-type: jiva

    ## Namespaces from which services are selected
    # namespaceSelector: []
    ## Match any namespace
    #   any: true

    ## Example

    # namespaceSelector:
    #   any: true

    ## Explicit list of namespace names to select
    #   matchNames: []

    ## Example

    # namespaceSelector:
    #   matchNames:
    #   - openebs
    #   - default

    namespaceSelector:
      any: true

podMonitors:
  cstor:
    enabled: true

    ## Endpoints of the selected pods to be monitored
    ## https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#podmetricsendpoint
    podMetricsEndpoints:
      ## Name or number of the endpoint's target port
      ## Mutually exclusive with port
      #  targetPort: ""
      targetPort: 9500

      ## HTTP path to scrape for metrics
      #     path: /metrics
      path: /metrics

      ## relabel configs to apply to samples before ingestion.
      ##
      #     relabelings: []
      #     - sourceLabels: [__meta_kubernetes_pod_node_name]
      #       separator: ;
      #       regex: ^(.*)$
      #       targetLabel: nodename
      #       replacement: $1
      #       action: replace
      relabelings:
        ## RelabelConfigs to apply to samples before scraping.
        ## More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
        ## To know more about RelabelConfig schema visit: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
        - sourceLabels: [__meta_kubernetes_pod_annotation_openebs_io_monitoring]
          regex: pool_exporter_prometheus
          action: keep
          ## Adding comma-separated source_labels below in order to fetch the metrics for pool claim instances of SPC and CSPC kind
        - sourceLabels:
            [
              __meta_kubernetes_pod_label_openebs_io_storage_pool_claim,
              __meta_kubernetes_pod_label_openebs_io_cstor_pool_cluster,
            ]
          action: replace
          ## separator: Separator placed between concatenated source label values, default -> ;
          separator: ""
          targetLabel: storage_pool_claim
          ## Adding comma-separated source_labels below in order to fetch the metrics for pool instances of CSP and CSPI kind
        - sourceLabels:
            [
              __meta_kubernetes_pod_label_openebs_io_cstor_pool,
              __meta_kubernetes_pod_label_openebs_io_cstor_pool_instance,
            ]
          action: replace
          ## separator: Separator placed between concatenated source label values, default -> ;
          separator: ""
          targetLabel: cstor_pool
        - sourceLabels:
            [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: ${1}:${2}
          targetLabel: __address__

    ## Label selector for pods to which this PodMonitor applies
    # selector: {}
    #   matchlabels: {}

    ## Example

    # selector: {}
    #   matchLabels:
    #       app: cstor-pod

    selector:
      matchLabels:
        app: cstor-pool

    ## Namespaces from which services are selected
    # namespaceSelector: []
    ## Match any namespace
    #   any: true

    ## Example

    # namespaceSelector:
    #   any: true

    ## Explicit list of namespace names to select using matchNames
    # matchNames: []

    ## Example

    # namespaceSelector:
    #   matchNames:
    #   - openebs
    #   - default

    namespaceSelector:
      any: true
